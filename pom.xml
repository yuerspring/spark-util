<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>spark-impala-kudu</groupId>
	<artifactId>spark-impala-kudu</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>${project.artifactId}</name>
	<description>My wonderfull scala app</description>
	<inceptionYear>2015</inceptionYear>
	<licenses>
		<license>
			<name>My License</name>
			<url>http://....</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<!-- <repositories> <repository> <id>cdh.repo</id> <name>Cloudera Repositories</name> 
		<url>https://repository.cloudera.com/artifactory/cloudera-repos</url> <snapshots> 
		<enabled>false</enabled> </snapshots> </repository> </repositories> -->
	<properties>
		<maven.compiler.source>1.6</maven.compiler.source>
		<impala.jdbc.version>2.5.30</impala.jdbc.version>
		<maven.compiler.target>1.6</maven.compiler.target>
		<encoding>UTF-8</encoding>
		<scala.version>2.10.6</scala.version>
		<scala.compat.version>2.10</scala.compat.version>
	</properties>

	<dependencies>
	<dependency>
			<groupId>org.spark.kafka</groupId>
			<artifactId>spark-kafka</artifactId>
			<version>0.8-1.3.0</version>
	</dependency>
		<dependency>
			<groupId>org.apache.hive</groupId>
			<artifactId>hive-metastore</artifactId>
			<version>1.1.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.hive</groupId>
			<artifactId>hive-jdbc</artifactId>
			<version>1.1.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.hive</groupId>
			<artifactId>hive-service</artifactId>
			<version>1.1.0</version>
			<exclusions>
				<exclusion>
					<artifactId>servlet-api</artifactId>
					<groupId>javax.servlet</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.kudu</groupId>
			<artifactId>kudu-client</artifactId>
			<version>1.3.0</version>
		</dependency>

		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-sql_2.10</artifactId>
			<version>1.6.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.kudu</groupId>
			<artifactId>kudu-mapreduce</artifactId>
			<version>1.3.1</version>
			<exclusions>
				<exclusion>
					<artifactId>jsp-api</artifactId>
					<groupId>javax.servlet.jsp</groupId>
				</exclusion>
				<exclusion>
					<artifactId>servlet-api</artifactId>
					<groupId>javax.servlet</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- <dependency> <groupId>org.apache.avro</groupId> <artifactId>avro</artifactId> 
			<version>1.7.6-cdh5.11.0</version> </dependency> -->

		<!-- <dependency> <groupId>com.twitter</groupId> <artifactId>parquet-hadoop</artifactId> 
			<version>1.5.0-cdh5.11.0</version> </dependency> -->
		<!-- <dependency> <groupId>com.twitter</groupId> <artifactId>parquet-format</artifactId> 
			<version>2.1.0-cdh5.11.0</version> </dependency> -->

		<!-- <dependency> <groupId>org.apache.zookeeper</groupId> <artifactId>zookeeper</artifactId> 
			<version>3.4.5-cdh5.11.0</version> </dependency> -->
		<!-- <dependency> <groupId>org.apache.hadoop</groupId> <artifactId>hadoop-yarn-server-resourcemanager</artifactId> 
			<version>2.6.0-cdh5.11.0</version> </dependency> -->
	</dependencies>

	<build>
		<sourceDirectory>src/main/scala</sourceDirectory>
		<testSourceDirectory>src/test/scala</testSourceDirectory>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.1</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
				<jarName>reporting-online-kudu-1.0.0</jarName>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix></classpathPrefix><!-- 没什么用，分布式的时候除非你每台机子都放了，不然会有找不到的 -->
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib
							</outputDirectory>
							<includeArtifactIds>
							mongo-java-driver,
							spark-streaming-kafka_2.10,
							mysql-connector-java,
							zhiziyun-geo,
							kafka-clients,
							kudu-mapreduce,
							kudu-client,
							spark-kafka
							</includeArtifactIds>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<!-- 在default生命周期的 validate阶段就执行resources插件的copy-resources目标 -->
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.outputDirectory}/resources</outputDirectory>
							<encoding>UTF-8</encoding>
							<resources>
								<resource>
									<directory>src/resource/conf</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
